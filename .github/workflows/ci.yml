# name: CI

# on:
#   push:
#     branches: [$default-branch, main]
#   pull_request:
#     branches: [ $default-branch, main ]

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     outputs:
#       new_release_published: ${{ steps.semantic.outputs.new_release_published }}
#       new_release_version: ${{ steps.semantic.outputs.new_release_version }}
#       last_release_version: ${{ steps.semantic.outputs.last_release_version }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Semantic Release
#         uses: cycjimmy/semantic-release-action@v2
#         id: semantic
#         with:
#           # semantic_version: 17  # It is recommended to specify specifying version range
#           branch: main
#           working_directory: ./common/autoinstallers/rush-semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # frontend:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push frontend
  #       id: docker_build_frontend
  #       uses: docker/build-push-action@v2
  #       if: needs.release.outputs.new_release_published == 'true'
  #       with:
  #         context: .
  #         file: ./packages/frontend/Dockerfile
  #         push: true
  #         tags: glopezep/dritelabs-project-starter-frontend:${{ needs.release.outputs.new_release_version }}

  # server:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push Server
  #       id: docker_build_server
  #       uses: docker/build-push-action@v2
  #       if: needs.release.outputs.new_release_published == 'true'
  #       with:
  #         context: .
  #         file: ./packages/server/Dockerfile
  #         push: true
  #         tags: glopezep/dritelabs-project-starter-server:${{ needs.release.outputs.new_release_version }}

  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: [release, packages, frontend, server, worker]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Deploy to kubernetes
  #       uses: 'deliverybot/helm@v1'
  #       # if: needs.release.outputs.new_release_published == 'true'
  #       with:
  #         atomic: true
  #         helm: helm3
  #         release: 'transcoder'
  #         namespace: 'default'
  #         chart: './k8s/transcoder'
  #         token: '${{ secrets.GITHUB_TOKEN }}'
  #         values: |
  #           transcoder-frontend:
  #             image:
  #               tag: ${{ needs.release.outputs.new_release_version || needs.release.outputs.last_release_version }}
  #           transcoder-server:
  #             image:
  #               tag: ${{ needs.release.outputs.new_release_version || needs.release.outputs.last_release_version }}
  #           transcoder-worker:
  #             image:
  #               tag: ${{ needs.release.outputs.new_release_version || needs.release.outputs.last_release_version }}
  #       env:
  #         KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
